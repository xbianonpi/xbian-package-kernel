#!upstart

description "Starting Bluetooth (UART) depending of settings in /boot/config.txt"
author      "mkreisl mkreisl@xbian.org"

#
# Parts used from here https://github.com/RPi-Distro/pi-bluetooth
# For on-board BT, configure the BDADDR if necessary and route SCO packets
# to the HCI interface (enables HFP/HSP)
#

start on filesystem and stopped udevtrigger and bt-ready

pre-start script
    [ "$(wc -c 2>/dev/null < /proc/device-tree/soc/gpio@7e200000/bt_pins/brcm,pins)" \> 0 ] || { stop; exit 0; }

    if grep -q "raspberrypi,4" /proc/device-tree/compatible; then
        BDADDR=
    else
        SERIAL=`cat /proc/device-tree/serial-number | cut -c9-`
        B1=`echo $SERIAL | cut -c3-4`
        B2=`echo $SERIAL | cut -c5-6`
        B3=`echo $SERIAL | cut -c7-8`
        BDADDR=`printf b8:27:eb:%02x:%02x:%02x $((0x$B1 ^ 0xaa)) $((0x$B2 ^ 0xaa)) $((0x$B3 ^ 0xaa))`
    fi

    # Bail out if the kernel is managing the Bluetooth modem initialisation
    dmesg | grep -qE "hci[0-9]+: BCM: chip" && { stop; exit 0; }

    dev='/dev/serial1'

    uart0="`cat /proc/device-tree/aliases/uart0`"
    serial1="`cat /proc/device-tree/aliases/serial1`"

    if [ "$uart0" = "$serial1" ]; then
        uart0_pins=$(wc -c < /proc/device-tree/soc/gpio@7e200000/uart0_pins/brcm\,pins)
        [ "$uart0_pins" = "16" ] && speed=3000000 || speed=921600
    else
        speed=460800
    fi

    echo "using $dev@$speed"
    hciattach $dev bcm43xx $speed flow - $BDADDR
end script

script
    for i in $(seq 1 5); do
        sleep 1
        if [ ! -z "$(ls /sys/class/bluetooth 2>/dev/null)" ]; then
            [ -e /etc/default/bluetooth ] && ! grep -q ^BLUETOOTH_ENABLED=1 /etc/default/bluetooth && \
                sed -i 's/BLUETOOTH_ENABLED=./BLUETOOTH_ENABLED=1/' /etc/default/bluetooth
            for dev in $(ls /sys/class/bluetooth 2>/dev/null); do
                # Need to bring hci up before looking at MAC as it can be all zeros during init
                hciconfig $dev up || :
                if hciconfig $dev | grep -q "Bus: UART"; then
                    if hcitool -i $dev dev | grep -qE '\s43:4[35]:'; then
                        SERIAL=`cat /proc/device-tree/serial-number | cut -c9-`
                        B1=`echo $SERIAL | cut -c3-4`
                        B2=`echo $SERIAL | cut -c5-6`
                        B3=`echo $SERIAL | cut -c7-8`
                        BDADDR=`printf '0x%02x 0x%02x 0x%02x 0xeb 0x27 0xb8' $((0x$B3 ^ 0xaa)) $((0x$B2 ^ 0xaa)) $((0x$B1 ^ 0xaa))`

                        hcitool -i $dev cmd 0x3f 0x001 $BDADDR
                        hciconfig $dev reset
                    else
                        echo "BDADDR need not be set for $dev"
                    fi
                    # Route SCO packets to the HCI interface (enables HFP/HSP)
                    hcitool -i $dev cmd 0x3f 0x1c 0x01 0x02 0x00 0x01 0x01 >/dev/null
                fi
            done
            break
        fi
    done
    [ -z "$(ls /sys/class/bluetooth 2>/dev/null)" ] && [ -e /etc/default/bluetooth ] && grep -q ^BLUETOOTH_ENABLED=1 /etc/default/bluetooth && \
        sed -i 's/BLUETOOTH_ENABLED=./BLUETOOTH_ENABLED=0/' /etc/default/bluetooth
end script

post-stop script
    [ $(xbian-arch) = RPI ] || exit 0

    if [ -e /etc/default/bluetooth ]; then
        if [ -z "$(ls /sys/class/bluetooth 2>/dev/null)" ]; then
            grep -q ^BLUETOOTH_ENABLED=1 /etc/default/bluetooth && sed -i 's/BLUETOOTH_ENABLED=./BLUETOOTH_ENABLED=0/' /etc/default/bluetooth
        else
            grep -q ^BLUETOOTH_ENABLED=1 /etc/default/bluetooth || sed -i 's/BLUETOOTH_ENABLED=./BLUETOOTH_ENABLED=1/' /etc/default/bluetooth
        fi
    fi
end script
