#!/bin/bash

KVER="__KVER__"
KVER=$(echo $KVER | tr '~' '-')
pKVER=$(echo $2 | cut -f 1 -d '-')
fpool="/boot/System.map-$KVER /boot/kernel.img-$KVER /boot/kernel8.img-$KVER"
export KVER
XARCH="$(/usr/local/sbin/xbian-arch)"
export PATH=/usr/local/sbin:$PATH

case $XARCH in
    RPI|iMX6)
        [ -e /lib/libarmmem.so ] && { grep -q 'libarmmem.so' /etc/ld.so.preload 2>/dev/null || echo '/lib/libarmmem.so' >> /etc/ld.so.preload; }
        grep -q 'libtcmalloc_minimal.so' /etc/ld.so.preload 2>/dev/null && sed -i "/.*libtcmalloc_minimal.so/d" /etc/ld.so.preload
        [ "$(stat -c %d:%i /)" != "$(stat -c %d:%i /proc/1/root/. 2>/dev/null)" ] && [ -e /etc/ld.so.preload ] && mv /etc/ld.so.preload /etc/ld.so.preload.chroot || :
    ;;
esac

if [ $1 == "configure" ]; then

    case $XARCH in
        RPI)
            mv /boot-new/kernel.img-$KVER /boot/kernel.img 2>/dev/null || :
            mv /boot-new/kernel8.img-$KVER /boot/kernel8.img 2>/dev/null || :
            mv /boot-new/System.map-$KVER /boot/
            cp /boot/System.map-$KVER /boot/System.map
            [ -e /boot/overlays ] && rm -fr /boot/overlays
            mv /boot-new/*.dtb /boot/ &>/dev/null
            mv /boot-new/overlays /boot/ &>/dev/null
            [ -e /boot-new/README.overlays ] && mv /boot-new/README.overlays /boot/ &>/dev/null
            rm -r /boot-new
            depmod -a $KVER

            for f in $fpool; do
                { [ -f $f.xbian ] && rm $f.xbian; } || true
            done

            if dpkg --compare-versions "$KVER" gt "4.13"; then
                for lb in $(grep ^dtoverlay=lirc-rpi /boot/config.txt); do
                    for PARM in "gpio_in_pin=" "gpio_out_pin=" "gpio_in_pull" "invert" "debug"; do
                        p=$(echo "$lb" | awk -F',' -v a=".*$PARM" -v b="$PARM" "/$PARM/"'{ sub(a,b); print $1 }' 2>/dev/null)
                        [ -z "$p" ] || { o=${p%%=*}; v=${p#*=}; [ "$v" = "$o" ] && v=1; eval $o=$v; }
                    done
                    ln="dtoverlay=gpio-ir"
                    [ -z "$gpio_in_pin" ]  || ln="$ln,gpio_pin=$gpio_in_pin"
                    [ -z "$gpio_in_pull" ] || ln="$ln,gpio_pull=$gpio_in_pull"
                    [ -z "$gpio_out_pin" ] || gpio_tx="\ndtoverlay=gpio-ir-tx,gpio_pin=$gpio_out_pin"
                    [ -z "$invert" ] || { [ -n "$gpio_tx" ] && gpio_tx="$gpio_tx,invert" || gpio_tx="\ndtoverlay=gpio-ir-tx,invert"; }
                    sed -i "s/^$lb/$ln$gpio_tx/g" /boot/config.txt
                done
            elif dpkg --compare-versions "$pKVER" gt "4.13"; then
               for li in $(grep ^dtoverlay=gpio-ir /boot/config.txt); do
                    gpio_in_pin=''; gpio_pull=''
                    for PARM in "gpio_pin=" "gpio_pull"; do
                        p=$(echo "$lb" | awk -F',' -v a=".*$PARM" -v b="$PARM" "/$PARM/"'{ sub(a,b); print $1 }' 2>/dev/null)
                        [ -z "$p" ] || { o=${p%%=*}; v=${p#*=}; [ "$v" = "$o" ] && v=1; eval $o=$v; }
                    done
                done
                gpio_in_pin=$gpio_pin; gpio_pin=''
                for lo in $(grep ^dtoverlay=gpio-ir-tx /boot/config.txt); do
                    gpio_pin=''; invert=''
                    for PARM in "gpio_pin=" "invert"; do
                        p=$(echo "$lb" | awk -F',' -v a=".*$PARM" -v b="$PARM" "/$PARM/"'{ sub(a,b); print $1 }' 2>/dev/null)
                        [ -z "$p" ] || { o=${p%%=*}; v=${p#*=}; [ "$v" = "$o" ] && v=1; eval $o=$v; }
                    done
                done
                ln="dtoverlay=lirc-rpi"
                [ -z "$gpio_in_pin" ] || ln="$ln,gpio_in_pin=$gpio_in_pin"
                [ -z "$gpio_pin" ] || ln="$ln,gpio_out_pin=$gpio_pin"
                [ -z "$gpio_pull" ] || ln="$ln,gpio_in_pull=$gpio_pull"
                [ -z "$invert" ] || ln="$ln,invert"
                sed "s/^dtoverlay=gpio-ir/$ln/g" /boot/config.txt
                sed "/^dtoverlay=gpio-ir-tx/d" /boot/config.txt
            fi
        ;;

        iMX6|MVEBU)
            [ ! -e /boot/mks ] || { rm -f /usr/local/sbin/mks; ln -s /boot/mks /usr/local/sbin/; :; }

            if [ -b /dev/mmcblk0 ]; then
                echo "Updating u-boot"

                case $XARCH in
                    iMX6)
                        dd if=/etc/uboot-env/SPL of=/dev/mmcblk0 bs=1K seek=1
                        dd if=/etc/uboot-env/u-boot.img of=/dev/mmcblk0 bs=1K seek=42 conv=fsync
                    ;;
                    MVEBU)
                        dd if=/etc/uboot-env/u-boot-clearfog.mmc of=/dev/mmcblk0 bs=512 seek=1
                    ;;
                    *)
                        ;;
                esac

                sed -i "s%#$XARCH[\ ]*%%g" /etc/uboot-env.conf

                if [ ! -e /boot/noenv ]; then
                    uboot-env del -i || uboot-env del -I
                    uboot-env set < /etc/uboot-env/env-$XARCH.txt
                    uboot-env set script boot.scr
                    uboot-env set bootdelay 2
                fi

            fi

            [ -e /dev/root ] && rr=$(readlink -e /dev/root); [ -z "$rr" ] && rr=$(findmnt -o source / -n)
            [ -e $rr ] && fstype="$(blkid -o value -s TYPE $rr)" || fstype="$(findmnt -n -r -o FSTYPE /)"
            case $fstype in
                btrfs) ;;
                zfs)   fstype=zfs; rr="ZFS=$rr" ;;
                nfs*)  fstype=nfs ;;
                *)     fstype=other ;;
            esac
            sed -i "s%setenv fstype.*%setenv fstype $fstype%" /boot/boot.scr.txt

            if [ -e /boot/boot.scr.txt.user ]; then
                ### keep rootfstype=, root=, nfsroot=, ip=, cnet=, rootflags= and video= from previous conf
                pbc=$(grep -wm1 ^'setenv baseconfig' /boot/boot.scr.txt.user | sed "s%^setenv baseconfig \+%%g;s% \+% \n%g" | grep -E  'rootfstype=|root=|nfsroot=|ip=|cnet=|video=' | tr -d '\n')
                nbc=$(grep -wm1 ^'setenv baseconfig' /boot/boot.scr.txt      | sed "s%^setenv baseconfig \+%%g;s% \+% \n%g" | grep -vE 'rootfstype=|root=|nfsroot=|ip=|cnet=|video=' | tr -d '\n')
                sed -i "0,/^setenv baseconfig.*/s%%setenv baseconfig $pbc$nbc%" /boot/boot.scr.txt

		### keep rootflags= from previous conf
                pba=$(grep -wm1 'setenv bootargs' /boot/boot.scr.txt.user | sed "s%^setenv bootargs \+%%g;s% \+% \n%g" | grep -E 'rootflags=' | tr -d '\n')
                nba=$(grep -wm1 'setenv bootargs' /boot/boot.scr.txt      | sed "s%^setenv bootargs \+%%g;s% \+% \n%g" | grep -E 'rootflags=' | tr -d '\n')
                sed -i "0,/setenv bootargs.*/s%$nba%$pba%g" /boot/boot.scr.txt

                ### keep customcmdline from previous conf
                ccl=$(grep 'setenv customcmdline' /boot/boot.scr.txt.user)

                rm -f /boot/boot.scr.txt.user
            else
                [ -e /proc/cmdline ] && { rr=$(grep root= /proc/cmdline); rr=$(echo ${rr##* root=} | awk '{print $1}'); }
                [ -n "$rr" ] && sed -i "s%root=/dev/mmcblk0p2%root=$rr%" /boot/boot.scr.txt
                ccl="setenv customcmdline"
            fi

            if [ $XARCH = iMX6 ]; then
                if dpkg --compare-versions "$KVER" lt "5.8"; then
                    echo "$ccl" | grep -q 'mxc_hdmi.rgb_quant_range' || ccl="$ccl mxc_hdmi.rgb_quant_range=full"
                    echo "$ccl" | grep -q 'mxc_hdmi.enable_3d' || ccl="$ccl mxc_hdmi.enable_3d=enable"
                    echo "$ccl" | grep -q 'vpu352=' || ccl="$ccl vpu352=0"
                fi
                echo "$ccl" | grep -q 'overclock=' || ccl="$ccl overclock=0"
                update-rc.d imx6-bluetooth defaults &>/dev/null
            fi

            [ -z "$ccl" ] || sed -i "s%setenv customcmdline.*%$ccl%" /boot/boot.scr.txt

            if [ "$(findmnt -v -n -o SOURCE /)" != "$(findmnt -v -n -o SOURCE /boot)" ]; then
                sed -i "s%fprefix boot/%fprefix %g" /boot/boot.scr.txt
            fi

            [ ! -e /boot/boot.scr.txt.xbian ] || rm -f /boot/boot.scr.txt.xbian
            cd /boot; ./mks
        ;;

        *)
        ;;
    esac

    KVERFULL=$(dpkg -s $DPKG_MAINTSCRIPT_PACKAGE | sed -n 's/^Version: //p' | tr -d '+')
    echo -e "Package: linux-libc-dev\nPin: version $KVERFULL\nPin-Priority: 1002" > /etc/apt/preferences.d/01xbian-linux-libc-dev

    [ -h /lib/modules/$KVER.xbian/build ] && mv /lib/modules/$KVER.xbian/build /lib/modules/$KVER
    [ -d /lib/modules/$KVER.xbian ] && { rm -fr /lib/modules/$KVER.xbian || echo "rm -fr /lib/modules/$KVER.xbian" | at -M now + 2min &>/dev/null; }
    [ -n "$pKVER" ] && [ "$pKVER" != "$KVER" ] && [ -d /lib/modules/$pKVER ] && { rm -fr /lib/modules/$pKVER || echo "rm -fr /lib/modules/$pKVER" | at -M now + 2min &>/dev/null; }

    insserv -fr rng-tools &>/dev/null
    udevadm control --reload-rules || :

    INITRD=No run-parts --new-session --report -a $KVER /etc/kernel/postinst.d &>/dev/null

fi

echo "xbian-package-kernel" >> /var/run/reboot-required || :
